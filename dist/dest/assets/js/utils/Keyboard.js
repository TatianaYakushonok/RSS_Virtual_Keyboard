import*as storage from"./storage.js";import create from"./create.js";import language from"../layouts/export.js";import Key from"./Key.js";const main=create("main","main__container",[create("h1","title","RSS Virtual Keyboard"),create("h3","subtitle","Windows keyboard")]);export default class Keyboard{constructor(t){this.rowsOrder=t,this.keyPressed={},this.isCaps=!1}init(t){return this.keyBase=language[t],this.output=create("textarea","output",null,main,["placeholder","Start typing text..."],["rows",8],["cols",112],["spellcheck",!1],["autocorrect","off"]),this.paragraf=create("p","paragraf","Use left <kbd>Ctrl</kbd> + <kbd>Alt</kbd> to switch language.",main),this.container=create("div","keyboard",null,main,["language",t]),document.body.prepend(main),this}generateLayout(){this.keyButtons=[],this.rowsOrder.forEach(((t,e)=>{const s=create("div","keyboard__row",null,this.container,["row",e+1]);s.style.gridTemplateColumns=`repeat(${t.length}, 1fr)`,t.forEach((t=>{const e=this.keyBase.find((e=>e.code===t));if(e){const t=new Key(e);this.keyButtons.push(t),s.appendChild(t.div)}}))})),document.addEventListener("keydown",this.handleEvent),document.addEventListener("keyup",this.handleEvent),this.container.onmousedown=this.preHandleEvent,this.container.onmouseup=this.preHandleEvent}preHandleEvent=t=>{t.stopPropagation();const e=t.target.closest(".keyboard__key");if(!e)return;const{dataset:{code:s}}=e;e.addEventListener("mouseleave",this.resetButtonState),this.handleEvent({code:s,type:t.type})};resetButtonState=({target:{dataset:{code:t}}})=>{const e=this.keyButtons.find((e=>e.code===t));e.div.classList.remove("active"),e.div.removeEventListener("mouseleave",this.resetButtonState)};handleEvent=t=>{t.stopPropagation&&t.stopPropagation();const{code:e,type:s}=t,i=this.keyButtons.find((t=>t.code===e));i&&(this.output.focus(),s.match(/keydown|mousedown/)?(s.match(/key/)&&t.preventDefault(),e.match(/Shift/)&&(this.shiftKey=!0),this.shiftKey&&this.switchUpperCase(!0),i.div.classList.add("active"),e.match(/CapsLock/)&&!this.isCaps?(this.isCaps=!0,this.switchUpperCase(!0)):e.match(/CapsLock/)&&this.isCaps&&(this.isCaps=!1,this.switchUpperCase(!1),i.div.classList.remove("active")),e.match(/Control/)&&(this.ctrlKey=!0),e.match(/Alt/)&&(this.altKey=!0),e.match(/Control/)&&this.altKey&&this.switchLanguage(),e.match(/Alt/)&&this.ctrlKey&&this.switchLanguage(),this.isCaps?this.isCaps&&(this.shiftKey?this.printToOutput(i,i.sub.innerHTML?i.shift:i.small):this.printToOutput(i,i.sub.innerHTML?i.small:i.shift)):this.printToOutput(i,this.shiftKey?i.shift:i.small)):s.match(/keyup|mouseup/)&&(e.match(/Shift/)&&(this.shiftKey=!1,this.switchUpperCase(!1)),e.match(/Control/)&&(this.ctrlKey=!1),e.match(/Alt/)&&(this.altKey=!1),e.match(/CapsLock/)||i.div.classList.remove("active")))};switchLanguage=()=>{const t=Object.keys(language);let e=t.indexOf(this.container.dataset.language);this.keyBase=e+1<t.length?language[t[e+=1]]:language[t[e-=e]],this.container.dataset.language=t[e],storage.set("kbLang",t[e]),this.keyButtons.forEach((t=>{const e=this.keyBase.find((e=>e.code===t.code));e&&(t.shift=e.shift,t.small=e.small,e.shift&&e.shift.match(/[^a-zA-Zа-яА-ЯёЁ0-9]/)?t.sub.innerHTML=e.shift:t.sub.innerHTML="",t.letter.innerHTML=e.small)})),this.isCaps&&this.switchUpperCase(!0)};switchUpperCase(t){t?this.keyButtons.forEach((t=>{t.sub&&this.shiftKey&&(t.sub.classList.add("sub-active"),t.letter.classList.add("sub-inactive")),t.isFnKey||!this.isCaps||this.shiftKey||t.sub.innerHTML?!t.isFnKey&&this.isCaps&&this.shiftKey?t.letter.innerHTML=t.small:t.isFnKey||t.sub.innerHTML||(t.letter.innerHTML=t.shift):t.letter.innerHTML=t.shift})):this.keyButtons.forEach((t=>{t.sub.innerHTML&&!t.isFnKey?(t.sub.classList.remove("sub-active"),t.letter.classList.remove("sub-inactive"),this.isCaps?this.isCaps&&(t.letter.innerHTML=t.shift):t.letter.innerHTML=t.small):t.isFnKey||(this.isCaps?t.letter.innerHTML=t.shift:t.letter.innerHTML=t.small)}))}printToOutput(t,e){let s=this.output.selectionStart;const i=this.output.value.slice(0,s),a=this.output.value.slice(s),n={Tab:()=>{this.output.value=`${i}\t${a}`,s+=1},ArrowLeft:()=>{s=s-1>=0?s-1:0},ArrowRight:()=>{s+=1},ArrowUp:()=>{const t=this.output.value.slice(0,s).match(/(\n).*${(?!\1)/g)||[[1]];s-=t[0].length},ArrowDown:()=>{const t=this.output.value.slice(s).match(/^.*(\n).*(?!\1)/)||[[1]];s+=t[0].length},Enter:()=>{this.output.value=`${i}\n${a}`,s+=1},Delete:()=>{this.output.value=`${i}${a.slice(1)}`},Backspace:()=>{this.output.value=`${i.slice(0,-1)}${a}`,s-=1},Space:()=>{this.output.value=`${i} ${a}`,s+=1}};n[t.code]?n[t.code]():t.isFnKey||(s+=1,this.output.value=`${i}${e||""}${a}`),this.output.setSelectionRange(s,s)}}